apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
spec:
  replicas: {{ .Values.mongodb.replicaCount }}
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
        - name: mongo-container
          image: mongo:4.4
          imagePullPolicy: {{ .Values.mongodb.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.mongodb.service.targetPort }}
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.mongodb.env.secretName }}
                  key: {{ .Values.mongodb.env.usernameKey }}
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.mongodb.env.secretName }}
                  key: {{ .Values.mongodb.env.passwordKey }}
          volumeMounts:
            - name: mongo-data
              mountPath: {{ .Values.mongodb.persistence.mountPath }}
      volumes:
        - name: mongo-data
          emptyDir: {}  # tu peux remplacer par un PersistentVolumeClaim si enabled = true
      imagePullSecrets:
            - name: harbor-secret            

---

apiVersion: v1
kind: Service
metadata:
  name: mongodb
spec:
  selector:
    app: mongodb
  ports:
    - protocol: TCP
      port: {{ .Values.mongodb.service.port }}
      targetPort: {{ .Values.mongodb.service.targetPort }}
  type: {{ .Values.mongodb.service.type}}

