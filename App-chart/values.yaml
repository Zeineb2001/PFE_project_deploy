# Discovery Service
discovery:
  replicaCount: 1
  image:
    repository: 172.27.249.245/springboot-microservices/discovery
    tag: latest
    pullPolicy: IfNotPresent
  service:
    port: 8761
    targetPort: 8761
    type: NodePort
  env:
    SPRING_PROFILES_ACTIVE: docker
    MANAGEMENT_TRACING_SAMPLING_PROBABILITY: "1.0"
    MANAGEMENT_ZIPKIN_TRACING_ENDPOINT: http://zipkin:9411/api/v2/spans

# Gateway Service
gateway:
  replicaCount: 1
  image:
    repository: 172.27.249.245/springboot-microservices/gateway
    tag: latest
    pullPolicy: IfNotPresent
  service:
    port: 8222
    targetPort: 8222
    type: NodePort
  env:
    SPRING_PROFILES_ACTIVE: docker
    EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery:8761/eureka
    MANAGEMENT_TRACING_SAMPLING_PROBABILITY: "1.0"
    MANAGEMENT_ZIPKIN_TRACING_ENDPOINT: http://zipkin:9411/api/v2/spans

# Customer Service
customer:
  replicaCount: 1
  image:
    repository: 172.27.249.245/springboot-microservices/customer
    tag: latest
    pullPolicy: IfNotPresent
  service:
    port: 8090
    targetPort: 8090
    type: ClusterIP
  env:
    SPRING_PROFILES_ACTIVE: docker
    MONGO_INITDB_ROOT_USERNAME: alibou
    MONGO_INITDB_ROOT_PASSWORD: alibou
    EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery:8761/eureka
    MANAGEMENT_TRACING_SAMPLING_PROBABILITY: "1.0"
    MANAGEMENT_ZIPKIN_TRACING_ENDPOINT: http://zipkin:9411/api/v2/spans

# Kafka Service
kafka:
  replicaCount: 1
  image:
    repository: 172.27.249.245/springboot-microservices/confluentinc/cp-kafka
    tag: latest
    pullPolicy: IfNotPresent
  service:
    external:
      port: 9092
      targetPort: 9092
    internal:
      port: 29092
      targetPort: 29092
    type: ClusterIP
  env:
    KAFKA_BROKER_ID: "1"
    KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
    KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
    KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
    KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
    KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"

# MailDev
mailDev:
  replicaCount: 1
  image:
    repository: 172.27.249.245/springboot-microservices/maildev/maildev
    tag: latest
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 1080
    targetPort: 1080
    port: 1025
    targetPort: 1025

# MongoDB Configuration and Secret
configMap:
  name: mongo-config
  ME_CONFIG_MONGODB_SERVER: mongodb
  name: postgres-config  
  PGDATA: /data/postgres

secret:
  name: mongodb-secret
  MONGO_INITDB_ROOT_USERNAME: alibou
  MONGO_INITDB_ROOT_PASSWORD: alibou
  name: postgres-secret  
  POSTGRES_USER: alibou
  POSTGRES_PASSWORD: alibou

postgresql:
  replicas: 1
  image:
    repository: 172.27.249.245/springboot-microservices/postgres
    tag: latest
  env:
    POSTGRES_USER_SECRET_NAME: postgres-secret
    POSTGRES_USER_SECRET_KEY: POSTGRES_USER
    POSTGRES_PASSWORD_SECRET_NAME: postgres-secret
    POSTGRES_PASSWORD_SECRET_KEY: POSTGRES_PASSWORD
    PGDATA_CONFIGMAP_NAME: postgres-config
    PGDATA_CONFIGMAP_KEY: PGDATA
  volumeMounts:
    mountPath: /data/postgres
  service:
    port: 5432
    targetPort: 5432
    type: NodePort

product:
  replicaCount: 1
  image:
    repository: 172.27.249.245/springboot-microservices/product
    tag: latest
    pullPolicy: Always
  service:
    port: 8050
    targetPort: 8050
    type: ClusterIP
  env:
    SPRING_PROFILES_ACTIVE: docker
    SPRING_DATASOURCE_URL: jdbc:postgresql://postgresql:5432/product
    SPRING_DATASOURCE_USERNAME: alibou
    SPRING_DATASOURCE_PASSWORD: alibou
    EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery:8761/eureka
    MANAGEMENT_TRACING_SAMPLING_PROBABILITY: "1.0"
    MANAGEMENT_ZIPKIN_TRACING_ENDPOINT: http://zipkin:9411/api/v2/spans

# Mongo Express
mongoExpress:
  replicaCount: 1
  image:
    repository: 172.27.249.245/springboot-microservices/mongo-express
    tag: latest
    pullPolicy: IfNotPresent
  service:
    port: 8081
    targetPort: 8081
    type: NodePort
  env:
    configMapName: mongo-config
    secretName: mongodb-secret
    adminUsernameKey: MONGO_INITDB_ROOT_USERNAME
    adminPasswordKey: MONGO_INITDB_ROOT_PASSWORD
    mongoServerKey: ME_CONFIG_MONGODB_SERVER

# MongoDB
mongodb:
  replicaCount: 1
  image:
    repository: 172.27.249.245/springboot-microservices/mongo
    tag: latest
    pullPolicy: IfNotPresent
  service:
    port: 27017
    targetPort: 27017
    type: NodePort
  env:
    secretName: mongodb-secret
    usernameKey: MONGO_INITDB_ROOT_USERNAME
    passwordKey: MONGO_INITDB_ROOT_PASSWORD
  persistence:
    enabled: false
    mountPath: /data

# Notification Service
notification:
  replicaCount: 1
  image:
    repository: 172.27.249.245/springboot-microservices/notification
    tag: latest
    pullPolicy: IfNotPresent
  service:
    port: 8040
    targetPort: 8040
    type: ClusterIP
  env:
    SPRING_PROFILES_ACTIVE: docker
    EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery:8761/eureka
    SPRING_DATA_MONGODB_USERNAME: alibou
    SPRING_DATA_MONGODB_PASSWORD: alibou
    SPRING_DATA_MONGODB_HOST: mongodb
    SPRING_DATA_MONGODB_PORT: "27017"
    SPRING_DATA_MONGODB_DATABASE: notification
    SPRING_DATA_MONGODB_AUTHENTICATION_DATABASE: admin
    SPRING_MAIL_HOST: mail-dev
    SPRING_MAIL_PORT: "1025"
    SPRING_MAIL_USERNAME: alibou
    SPRING_MAIL_PASSWORD: aliboudocker rm 
    SPRING_KAFKA_BOOTSTRAP_SERVERS: "kafka.default.svc.cluster.local:9092"  
    MANAGEMENT_TRACING_SAMPLING_PROBABILITY: "1.0"
    MANAGEMENT_ZIPKIN_TRACING_ENDPOINT: http://zipkin:9411/api/v2/spans

# Order Service
order:
  replicaCount: 1
  image:
    repository: 172.27.249.245/springboot-microservices/order
    tag: latest
    pullPolicy: Always
  service:
    port: 8070
    targetPort: 8070
    type: ClusterIP
  env:
    SPRING_PROFILES_ACTIVE: docker
    SPRING_DATASOURCE_URL: jdbc:postgresql://postgresql:5432/order
    SPRING_DATASOURCE_USERNAME: alibou
    SPRING_DATASOURCE_PASSWORD: alibou
    EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery:8761/eureka
    SPRING_KAFKA_BOOTSTRAP_SERVERS: "kafka.default.svc.cluster.local:9092"  
    MANAGEMENT_TRACING_SAMPLING_PROBABILITY: "1.0"
    MANAGEMENT_ZIPKIN_TRACING_ENDPOINT: http://zipkin:9411/api/v2/spans

# Payment Service
payment:
  replicaCount: 1
  image:
    repository: 172.27.249.245/springboot-microservices/payment
    tag: latest
    pullPolicy: IfNotPresent
  service:
    port: 8060
    targetPort: 8060
    type: ClusterIP
  env:
    SPRING_PROFILES_ACTIVE: docker
    SPRING_DATASOURCE_URL: jdbc:postgresql://postgresql:5432/order
    SPRING_DATASOURCE_USERNAME: alibou
    SPRING_DATASOURCE_PASSWORD: alibou
    EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery:8761/eureka
    SPRING_KAFKA_BOOTSTRAP_SERVERS: "kafka.default.svc.cluster.local:9092"       
    MANAGEMENT_TRACING_SAMPLING_PROBABILITY: "1.0"
    MANAGEMENT_ZIPKIN_TRACING_ENDPOINT: http://zipkin:9411/api/v2/spans



# Zipkin
zipkin:
  replicaCount: 1
  image:
    repository: 172.27.249.245/springboot-microservices/openzipkin/zipkin
    tag: latest
    pullPolicy: Always
  service:
    port: 9411
    targetPort: 9411
    type: NodePort

# Zookeeper
zookeeper:
  replicaCount: 1
  image:
    repository: 172.27.249.245/springboot-microservices/confluentinc/cp-zookeeper
    tag: latest
    pullPolicy: Always
  service:
    port: 2181
    targetPort: 2181
    type: NodePort
  env:
    ZOOKEEPER_CLIENT_PORT: 2181
    ZOOKEEPER_TICK_TIME: 2000



